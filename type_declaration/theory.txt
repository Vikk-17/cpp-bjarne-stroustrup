The ISO C++ Standard
--------------------
    - well defined
        unsigned char c1 = 64;
    - implementation defined
        unsigned char c2 = 1256;
            implicit conversion from int to unsigned char changes value
            from 1256 to 232.
    - trunctate

    - c++ implementation either hosted or freestanding
    - a hosted implementation includes all the Standard
        library facilities.
    - a freestanding implementation may provide fewer
        Standard library facilities. this implementation
        is meant for code running with only the most 
        minimal operating system support.

Fundamental Types
-----------------
    - boolean type => bool
    - character types => char and wchar_t
    - integer types => int and long long
    - floating point types => double and long double
    - a type, void, used to signify the absence of info.

    from these types, we can construct other types using
    declarator operators:
    - pointer types => int*
    - arry types => char[]
    - refernce types => double and vector<int>&&

    In addition, a user can define additional types:
    - data structures and classes
    - enumaration types for representing specific
    set of values => enum and enum class


    - The boolean, character and integer types are collectively
    called integral types.
    - The integral and floating-point types are collectively called
    arithmatic types.
    - Enumeration and classe are called user-defined types because
    they must be defined by the users rather than being available
    for use without previous declaration, the way Fundamental types
    are.

    - In contrast, fundamental types, pointers and refernces are
    collectively referred to as built-in types. 

    - The integral and floating point types are provided in a variety
    of sizes to give the programmer a choice of the amount of storage
    consumed, the precision, and the range available for computations.

Booleans
--------
    - bool can have one of the two values true or false.
    - true = 1 and false = 0
    - non zero integers convert to true and 0 converts to false.
        - bool b1 = 7; // 7!=0, so b1 becomes true
          int i1 = true; // i1 becomes 1
          int i2 {true}; // same
    - bools are converted into int, but if the result needs to be
    converted back to bool, 0->false, and 1->true.
        - bool a = true, b = true;
          bool x = a+b; // a+b=2(non zero)->true
          bool y = a||b; // a||b=1 becomes true
          bool z = a-b; // 0 becomes false

Character Types
---------------
    - char
    - signed char = can hold both positive and negative values
    - unsigned char = like char but guaranteed to be unsigned
    - wchar_t = provided to hold characters of a larger character
      set such as Unicode. The size of wchar_t is implementation
      defined and large enogh to hold the largest character set
      supported by the implementation's locale
    - char16_t = a type for holding 16-bit character sets, such as
      UTF-16.
    - char32_t = a type for holding 32-bit character sets, such as
      UTF-32.